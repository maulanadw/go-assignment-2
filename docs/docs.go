// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maulana Dwi Wahyudi",
            "email": "maulana@email.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders": {
            "get": {
                "description": "API for Get All order data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/param.OrderResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for create order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "description": "Create order",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/param.OrderResponse"
                        }
                    }
                }
            }
        },
        "/orders/:id": {
            "put": {
                "description": "API for update order data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "description": "Update Order",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/param.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/param.OrderResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for Delete order data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/param.OrderResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "param.Item": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "item_code": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "param.Order": {
            "type": "object",
            "properties": {
                "customer_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/param.Item"
                    }
                },
                "ordered_at": {
                    "type": "string"
                }
            }
        },
        "param.OrderResponse": {
            "type": "object",
            "properties": {
                "error_info": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/param.Order"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Hacktiv8 Assignment 2",
	Description:      "Build Rest API In GO",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
